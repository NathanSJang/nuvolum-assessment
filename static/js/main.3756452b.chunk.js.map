{"version":3,"sources":["comp/Modal.js","comp/ImageSlider.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","open","onClose","data","console","log","map","d","alt","className","onClick","ImageSlider","silderData","useState","current","setCurrent","openModal","setOpenModal","imgData","setImgData","len","length","useEffect","filter","id","style","transform","idx","path","image","src","Array","from","dot","moveDot","App","SilderData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEe,SAASA,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC3C,OAAIF,GACJG,QAAQC,IAAIF,EAAKG,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAExB,qCACI,qBAAKC,UAAU,YACf,sBAAKA,UAAU,QAAf,UACI,6BAAKN,EAAK,GAAGK,MACb,wBAAQC,UAAU,kBAAkBC,QAASR,EAA7C,0BAPK,KCEN,SAASS,EAAT,GAAsC,IAAfC,EAAc,EAAdA,WAClC,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAMR,EAAWS,OAOvB,GALAC,qBAAU,WACN,IAAInB,EAAOS,EAAWW,QAAO,SAAAhB,GAAC,OAAIA,EAAEiB,KAAOV,EAAS,KACpDK,EAAWhB,KACZ,CAACW,EAASF,IAEVQ,GAAO,EACN,OAAO,KAiBX,OACI,qBAAKX,UAAU,mBAAf,SACI,0BAASA,UAAU,SAAnB,UACI,cAAC,IAAD,CAAyBA,UAAU,aAAaC,QAZ1C,WAEdK,EADyB,IAAZD,EAAgBM,EAAK,EAAIN,EAAU,MAYxC,cAAC,IAAD,CAA0BL,UAAU,cAAcC,QAlB5C,WAEdK,EADaD,IAAYM,EAAK,EAAI,EAAIN,EAAU,MAkBxC,qBACIL,UAAU,QACVgB,MAAO,CAAEC,UAAU,eAAD,OAA2B,IAAVZ,EAAjB,OAFtB,SAICF,EAAWN,KAAI,SAACH,EAAMwB,GACnB,IAAIC,EAAO,wBAA0BzB,EAAK0B,MAC1C,OACI,qBACInB,QAAS,kBAAMO,GAAa,IAC5Ba,IAAKF,EACLpB,IAAKL,EAAKK,IACVC,UAAU,eAKtB,cAACT,EAAD,CAAOC,KAAMe,EAAWd,QAAS,kBAAMe,GAAa,IAAQd,KAAMe,IAElE,qBAAKT,UAAU,iBAAf,SACKsB,MAAMC,KAAK,CAACX,OAAQD,IAAMd,KAAI,SAAC2B,EAAKN,GAAN,OAC3B,qBACIjB,QAAS,kBA9BjB,SAACiB,GACbZ,EAAWY,GA6BwBO,CAAQP,IACvBlB,UAAWkB,IAAQb,EAAU,aAAe,kB,iBCtCzDqB,MAjBf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACI,gDACA,qBAAKA,UAAU,gBAAf,SACE,0LAKJ,qBAAKA,UAAU,cAAf,SACE,cAACE,EAAD,CAAaC,WAAYwB,UCLlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3756452b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Modal({ open, onClose, data }) {\n    if(!open) return null;\n    console.log(data.map(d => d.alt))\n    return (\n        <>\n            <div className=\"overlay\" />\n            <div className=\"modal\">\n                <h6>{data[0].alt}</h6>\n                <button className='modal-close-btn' onClick={onClose}>Close</button>\n            </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport { IoMdArrowDropleftCircle, IoMdArrowDroprightCircle } from 'react-icons/io';\nimport Modal from './Modal';\n\n\nexport default function ImageSlider({ silderData }) {\n    const [current, setCurrent] = useState(0);\n    const [openModal, setOpenModal] = useState(false);\n    const [imgData, setImgData] = useState(null)\n    const len = silderData.length;\n\n    useEffect(() => {\n        let data = silderData.filter(d => d.id === current +1)\n        setImgData(data);\n    }, [current, silderData]);\n\n    if(len <= 0) {\n        return null;\n    }\n\n    const nextSlide = () => {\n        const next = current === len -1 ? 0 : current + 1;\n        setCurrent(next);\n    }\n\n    const prevSlide = () => {\n        const prev = current === 0 ? len -1 : current - 1;\n        setCurrent(prev);\n    }\n\n    const moveDot = (idx) => {\n        setCurrent(idx);\n    }\n\n    return (\n        <div className=\"slider-container\">\n            <section className=\"slider\">\n                <IoMdArrowDropleftCircle className='left-arrow' onClick={prevSlide}/>\n                <IoMdArrowDroprightCircle className=\"right-arrow\" onClick={nextSlide}/>\n                <div \n                    className=\"inner\"\n                    style={{ transform: `translateX(-${current * 100}%)` }}\n                >\n                {silderData.map((data, idx) => {\n                    let path = 'images/slider-assets/' + data.image\n                    return (\n                        <img\n                            onClick={() => setOpenModal(true)}\n                            src={path}\n                            alt={data.alt}\n                            className=\"image\"\n                        /> \n                    ) \n                })}\n                </div>\n                <Modal open={openModal} onClose={() => setOpenModal(false)} data={imgData} />\n\n                <div className='container-dots'>\n                    {Array.from({length: len}).map((dot, idx) => (\n                        <div \n                            onClick={() => moveDot(idx)}\n                            className={idx === current ? \"dot active\" : \"dot\"}\n                        >\n                        </div>\n                    ))}\n                </div>\n            </section>\n        </div>\n    )\n}\n","import ImageSlider from './comp/ImageSlider';\nimport SilderData from './comp/slider-data.json';\n\n\nimport './style/app.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>Nuvolum Slider</h1>\n        <div className=\"app-sub-title\">\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\n            Perferendis architecto neque illum eius error, totam mollitia reiciendis officiis quis magnam?\n          </p>\n      </div>\n      <div className=\"app-context\">\n        <ImageSlider silderData={SilderData}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}